generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Dashboard {
  id        Int           @id @default(autoincrement())
  projectId Int           @unique
  project   Project       @relation(fields: [projectId], references: [id], onDelete: Cascade)
  preset    Json?
  type      DashboardType
}

enum DashboardType {
  STANDARD
  CUSTOM
}

model Project {
  id               Int      @id @default(autoincrement())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  title            String   @db.VarChar(255)
  shortDescription String   @db.VarChar(255)

  launchpad Launchpad?

  userId Int
  author User @relation(fields: [userId], references: [id])

  projectUsers ProjectUser[]
  devices      Device[]

  public Boolean

  Dashboard Dashboard[]

  imgKey String   @db.VarChar(255)
  ApiKey ApiKey[]
}

model ProjectUser {
  id Int @id @default(autoincrement())

  project   Project @relation(fields: [projectId], references: [id])
  projectId Int

  user   User @relation(fields: [userId], references: [id])
  userId Int

  admin Boolean

  @@unique([projectId, userId]) //User kan niet nog ééns worden toegevoegd aan een project
}

model Launchpad {
  id     Int  @id @default(autoincrement())
  preset Json

  projectId Int     @unique
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  tiles Tile[] @relation("LaunchpadTiles")
}

model Tile {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(255)
  description String    @db.VarChar(500)
  imgKey      String    @db.VarChar(255)
  launchpadId Int
  launchpad   Launchpad @relation("LaunchpadTiles", fields: [launchpadId], references: [id])
}

model User {
  id           Int           @id @default(autoincrement())
  providerId   String        @unique
  email        String        @unique
  name         String
  admin        Boolean       @default(false)
  projects     Project[]
  projectUsers ProjectUser[]
}

model Device {
  id         String  @id @unique @default(uuid())
  deviceType String
  project    Project @relation(fields: [projectId], references: [id])
  projectId  Int

  name             String   @db.VarChar(255)
  description      String   @db.VarChar(500)
  latitude         Decimal
  longitude        Decimal
  imgKey           String   @db.VarChar(255)
  createdAt        DateTime @default(now())
  deviceParameters Json
  videos           Video[]
}

model Video {
  id         Int      @id @default(autoincrement())
  device     Device   @relation(fields: [deviceId], references: [id])
  deviceId   String
  videoUrl   String   @db.VarChar(500)
  recordedAt DateTime @default(now())
}

model ApiKey {
  id        Int     @id @default(autoincrement())
  name      String
  key       String  @unique
  project   Project @relation(fields: [projectId], references: [id])
  projectId Int
}
